{"version":3,"file":"BlogPost.astro_astro_type_script_index_4_lang.CDpsKtqO.js","sources":["../../src/layouts/BlogPost.astro?astro&type=script&index=4&lang.ts"],"sourcesContent":["\t// Wait for the content to fully load\n\tdocument.addEventListener(\"DOMContentLoaded\", () => {\n\t\t// Find all pre blocks\n\t\tdocument.querySelectorAll(\"pre\").forEach((pre) => {\n\t\t\t// Check if the button already exists\n\t\t\tif (!pre.querySelector(\".copy-code\")) {\n\t\t\t\t// Create the button\n\t\t\t\tconst copyButton = document.createElement(\"button\");\n\t\t\t\tcopyButton.className =\n\t\t\t\t\"absolute flex items-center justify-center bg-bgColor h-6 font-medium overflow-hidden rounded-md text-light hover:text-accent-two font-sans text-sm font-medium top-2 right-2\";\n\n\t\t\t\t// Create the span element that will hold the button text\n\t\t\t\tconst buttonText = document.createElement(\"span\");\n\t\t\t\tbuttonText.innerText = \"Copy\"; // Initial text\n\t\t\t\tbuttonText.className = \"flex items-center block w-full h-full px-2 bg-[var(--code-title-bg)]\"; // Set the span to take up full width with background color\n\n\t\t\t\tcopyButton.appendChild(buttonText); // Append span to the button\n\n\t\t\t\t// Add the button inside pre\n\t\t\t\tpre.appendChild(copyButton);\n\n\t\t\t\t// Event handler for copying text\n\t\t\t\tcopyButton.addEventListener(\"click\", async () => {\n\t\t\t\t\tconst code = pre.querySelector(\"code\")?.textContent;\n\t\t\t\t\tif (code) {\n\t\t\t\t\t\tawait navigator.clipboard.writeText(code);\n\t\t\t\t\t\tbuttonText.innerText = \"Copied!\"; // Change text to \"Copied!\"\n\n\t\t\t\t\t\t// After 1.5 seconds, change the text back to \"Copy\"\n\t\t\t\t\t\tsetTimeout(() => {\n\t\t\t\t\t\t\tbuttonText.innerText = \"Copy\";\n\t\t\t\t\t\t}, 1500);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\t\t});\n\t});\n\n\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,"],"names":["pre","copyButton","buttonText","code"],"mappings":"AAkJC,SAAS,iBAAiB,mBAAoB,IAAM,CAEnD,SAAS,iBAAiB,KAAK,EAAE,QAASA,GAAQ,CAEjD,GAAI,CAACA,EAAI,cAAc,YAAY,EAAG,CAE/B,MAAAC,EAAa,SAAS,cAAc,QAAQ,EAClDA,EAAW,UACX,+KAGM,MAAAC,EAAa,SAAS,cAAc,MAAM,EAChDA,EAAW,UAAY,OACvBA,EAAW,UAAY,uEAEvBD,EAAW,YAAYC,CAAU,EAGjCF,EAAI,YAAYC,CAAU,EAGfA,EAAA,iBAAiB,QAAS,SAAY,CAChD,MAAME,EAAOH,EAAI,cAAc,MAAM,GAAG,YACpCG,IACG,MAAA,UAAU,UAAU,UAAUA,CAAI,EACxCD,EAAW,UAAY,UAGvB,WAAW,IAAM,CAChBA,EAAW,UAAY,MACxB,EAAG,IAAI,GAER,CACF,EACA,CACF,CAAC"}